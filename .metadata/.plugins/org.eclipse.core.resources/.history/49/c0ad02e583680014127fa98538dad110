package Controller;

import java.io.IOException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import Model.User;
import Model.Database;

public class CreateAccount extends Database {
	
	public String username;
	public String password;
	public String realName;
	private Pattern forUser;
	private Pattern forPassword;
	private Matcher matcher;
	private static final String usernamePattern = 
            "((*\\w).{6,20})";
	private static final String passwordPattern = 
            "((?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%]).{8,20})";
	
	//draw create account and button listener
	public CreateAccount() {
		
		pattern = Pattern.compile(passwordPattern);
	}
	
	//creates the account after create button being pressed
	public void accountCreate(String username, String password, String realName) {
		User newUser = new User(username, password, realName);
		
		try {
			writeUserCSVEntry(newUser);
			
		} catch(IOException ex) {
			System.out.println (ex.toString());
		}
		
		
	}
	
	/**
	* Validate password 
	* @param password to validate
	* @return true if it passes the requirements, otherwise false
	*/
	public boolean usernameValidate(String username) {
		matcher = pattern.matcher(username);
		  return matcher.matches();
	}
	
	/**
	* Validate password 
	* @param password to validate
	* @return true if it passes the requirements, otherwise false
	*/
	public boolean passwordValidate(String password) {
	  matcher = pattern.matcher(password);
	  return matcher.matches();
	}
	
	/**
	* Validate real name for only containing alphabets.
	* @param real name for validation
	* @return true if contains only alphabets, otherwise false
	*/
	public boolean realNameValidate(String realName) {
		return realName.matches("[a-zA-Z]+");
	}
}
